<?xml version="1.0" encoding="UTF-8"?>
<ui version="4.0">
 <class>stock</class>
 <widget class="QDialog" name="stock">
  <property name="geometry">
   <rect>
    <x>0</x>
    <y>0</y>
    <width>983</width>
    <height>564</height>
   </rect>
  </property>
  <property name="windowTitle">
   <string>Dialog</string>
  </property>
  <property name="styleSheet">
   <string notr="true">/* Apply styles to QDialog */
QDialog {
    background-color: #ecf0f1; /* Background color of the dialog */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
}

/* Apply styles to QDialog title (the window title bar) */
QDialog::title {
    background-color: #3498db; /* Background color of the title bar */
    color: white; /* Text color of the title bar */
    border: 1px solid #2980b9; /* Border color of the title bar */
    border-top-left-radius: 5px; /* Rounded corners for the top-left of the title bar */
    border-top-right-radius: 5px; /* Rounded corners for the top-right of the title bar */
    padding: 5px; /* Padding */
}

/* Apply styles to QDialog contents */
QDialog::widget {
    background-color: #ffffff; /* Background color of the dialog contents */
    border: 1px solid #bdc3c7; /* Border color */
    border-top: none; /* Remove top border to match the title bar */
    padding: 10px; /* Padding inside the dialog contents */
}
</string>
  </property>
  <widget class="QTabWidget" name="tabWidget">
   <property name="geometry">
    <rect>
     <x>30</x>
     <y>60</y>
     <width>791</width>
     <height>441</height>
    </rect>
   </property>
   <property name="styleSheet">
    <string notr="true">/* Apply styles to QTabWidget */
QTabWidget {
    background-color: rgb(255, 38, 38); /* Background color of the tab widget */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
}

/* Apply styles to QTabBar (the tab headers) */
QTabBar::tab {
    background-color: #3498db;/* Background color of the tab header */
    color: white; /* Text color of the tab header */
    border: 1px solid #2980b9; /* Border color of the tab header */
    border-top-left-radius: 5px; /* Rounded corners for the top-left tab */
    border-top-right-radius: 5px; /* Rounded corners for the top-right tab */
    min-width: 100px; /* Minimum width of each tab header */
    padding: 5px; /* Padding */
}

/* Selected tab style */
QTabBar::tab:selected {
    background-color:rgb(255, 38, 38);/* Background color of the selected tab */
    border-color: #1f618d; /* Border color of the selected tab */
}

/* Hover effect on the tab header */
QTabBar::tab:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Apply styles to the tab content area */
QTabWidget::pane {
    border: 1px solid #bdc3c7; /* Border color around the tab content area */
    border-top: none; /* Remove top border to match the tab headers */
}

/* Apply styles to the tab content (QWidget inside the tab) */
QTabWidget::tab-page {
    background-color: #ffffff; /* Background color of the tab content area */
    border: 1px solid #bdc3c7; /* Border color around the tab content area */
    border-top: none; /* Remove top border to match the tab headers */
    padding: 10px; /* Padding inside the tab content area */
}
</string>
   </property>
   <property name="currentIndex">
    <number>1</number>
   </property>
   <property name="tabBarAutoHide">
    <bool>false</bool>
   </property>
   <widget class="QWidget" name="tab">
    <attribute name="title">
     <string>Ajouter stock</string>
    </attribute>
    <widget class="QLineEdit" name="lineEdit_nom">
     <property name="geometry">
      <rect>
       <x>140</x>
       <y>29</y>
       <width>113</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QLineEdit */
QLineEdit {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
}

/* Text selection color */
QLineEdit:selected {
    background-color: #3498db; /* Selected text background color */
    color: white; /* Selected text color */
}
</string>
     </property>
    </widget>
    <widget class="QPushButton" name="ajouter">
     <property name="geometry">
      <rect>
       <x>140</x>
       <y>190</y>
       <width>75</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QPushButton */
QPushButton {
    background-color: #3498db; /* Background color */
    color: white; /* Text color */
    border: 1px solid #2980b9; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px 10px; /* Padding (vertical horizontal) */
}

/* Hover effect */
QPushButton:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Pressed effect */
QPushButton:pressed {
    /*background-color: #1f618d;  Background color when pressed */
 background-color:rgb(153, 0, 0) ; /* Background color when pressed */
}
</string>
     </property>
     <property name="text">
      <string>Ajouter</string>
     </property>
    </widget>
    <widget class="QLineEdit" name="lineEdit_reference">
     <property name="geometry">
      <rect>
       <x>140</x>
       <y>70</y>
       <width>113</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QLineEdit */
QLineEdit {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
}

/* Text selection color */
QLineEdit:selected {
    background-color: #3498db; /* Selected text background color */
    color: white; /* Selected text color */
}
</string>
     </property>
    </widget>
    <widget class="QLabel" name="label">
     <property name="geometry">
      <rect>
       <x>60</x>
       <y>40</y>
       <width>47</width>
       <height>14</height>
      </rect>
     </property>
     <property name="text">
      <string>Nom:</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_2">
     <property name="geometry">
      <rect>
       <x>40</x>
       <y>80</y>
       <width>91</width>
       <height>20</height>
      </rect>
     </property>
     <property name="text">
      <string>Reference:</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_3">
     <property name="geometry">
      <rect>
       <x>50</x>
       <y>120</y>
       <width>71</width>
       <height>16</height>
      </rect>
     </property>
     <property name="text">
      <string>Quantit√©:</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_4">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>160</y>
       <width>101</width>
       <height>20</height>
      </rect>
     </property>
     <property name="text">
      <string>Prix_unitaire:</string>
     </property>
    </widget>
    <widget class="QSpinBox" name="spinBox_quantity">
     <property name="geometry">
      <rect>
       <x>140</x>
       <y>110</y>
       <width>111</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QSpinBox */
QSpinBox {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
    min-width: 50px; /* Minimum width to fit numbers */
}

/* Arrow button style */
QSpinBox::up-button, QSpinBox::down-button {
    width: 20px; /* Width of the arrow button */
    background-color: #3498db; /* Background color of the arrow button */
    border: 1px solid #2980b9; /* Border color of the arrow button */
    border-radius: 5px; /* Rounded corners */
    padding: 2px; /* Padding */
}

/* Arrow button on hover */
QSpinBox::up-button:hover, QSpinBox::down-button:hover {
    background-color: #2980b9; /* Background color on hover */
}

/* Arrow button when pressed */
QSpinBox::up-button:pressed, QSpinBox::down-button:pressed {
    background-color: #1f618d; /* Background color when pressed */
    border: 1px solid #154360; /* Border color when pressed */
}
</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_12">
     <property name="geometry">
      <rect>
       <x>300</x>
       <y>50</y>
       <width>47</width>
       <height>14</height>
      </rect>
     </property>
     <property name="text">
      <string/>
     </property>
    </widget>
    <widget class="QDoubleSpinBox" name="doubleSpinBox_prixUnitaire">
     <property name="geometry">
      <rect>
       <x>140</x>
       <y>150</y>
       <width>111</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QSpinBox */
QDoubleSpinBox {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
    min-width: 50px; /* Minimum width to fit numbers */
}

/* Arrow button style */
QDoubleSpinBox::up-button, QDoubleSpinBox::down-button {
    width: 20px; /* Width of the arrow button */
    background-color: #3498db; /* Background color of the arrow button */
    border: 1px solid #2980b9; /* Border color of the arrow button */
    border-radius: 5px; /* Rounded corners */
    padding: 2px; /* Padding */
}

/* Arrow button on hover */
QDoubleSpinBox::up-button:hover,QDoubleSpinBox::down-button:hover {
    background-color: #2980b9; /* Background color on hover */
}

/* Arrow button when pressed */
QDoubleSpinBox::up-button:pressed,QDoubleSpinBox::down-button:pressed {
    background-color: #1f618d; /* Background color when pressed */
    border: 1px solid #154360; /* Border color when pressed */
}
</string>
     </property>
    </widget>
    <widget class="QPushButton" name="supprimer">
     <property name="geometry">
      <rect>
       <x>510</x>
       <y>110</y>
       <width>75</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QPushButton */
QPushButton {
    background-color: #3498db; /* Background color */
    color: white; /* Text color */
    border: 1px solid #2980b9; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px 10px; /* Padding (vertical horizontal) */
}

/* Hover effect */
QPushButton:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Pressed effect */
QPushButton:pressed {
    /*background-color: #1f618d;  Background color when pressed */
 background-color:rgb(153, 0, 0) ; /* Background color when pressed */
}
</string>
     </property>
     <property name="text">
      <string>Effacer</string>
     </property>
    </widget>
    <widget class="QPushButton" name="modifier">
     <property name="geometry">
      <rect>
       <x>220</x>
       <y>190</y>
       <width>75</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QPushButton */
QPushButton {
    background-color: #3498db; /* Background color */
    color: white; /* Text color */
    border: 1px solid #2980b9; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px 10px; /* Padding (vertical horizontal) */
}

/* Hover effect */
QPushButton:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Pressed effect */
QPushButton:pressed {
    /*background-color: #1f618d;  Background color when pressed */
 background-color:rgb(153, 0, 0) ; /* Background color when pressed */
}
</string>
     </property>
     <property name="text">
      <string>Modifier</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_9">
     <property name="geometry">
      <rect>
       <x>416</x>
       <y>60</y>
       <width>81</width>
       <height>20</height>
      </rect>
     </property>
     <property name="text">
      <string>Reference:</string>
     </property>
    </widget>
    <widget class="QLineEdit" name="lineEdit_reference_2">
     <property name="geometry">
      <rect>
       <x>500</x>
       <y>60</y>
       <width>113</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QLineEdit */
QLineEdit {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
}

/* Text selection color */
QLineEdit:selected {
    background-color: #3498db; /* Selected text background color */
    color: white; /* Selected text color */
}
</string>
     </property>
    </widget>
    <widget class="QGroupBox" name="groupBox_4">
     <property name="geometry">
      <rect>
       <x>350</x>
       <y>170</y>
       <width>231</width>
       <height>181</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">QGroupBox {
    border: 2px solid gray;
    border-radius: 5px;
    font-weight: bold;
}</string>
     </property>
     <property name="title">
      <string>SMS</string>
     </property>
     <widget class="QTextEdit" name="message">
      <property name="geometry">
       <rect>
        <x>40</x>
        <y>60</y>
        <width>151</width>
        <height>87</height>
       </rect>
      </property>
     </widget>
     <widget class="QLineEdit" name="numero">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>30</y>
        <width>113</width>
        <height>22</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">/* Apply styles to QLineEdit */
QLineEdit {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
}

/* Text selection color */
QLineEdit:selected {
    background-color: #3498db; /* Selected text background color */
    color: white; /* Selected text color */
}
</string>
      </property>
     </widget>
     <widget class="QPushButton" name="SMS">
      <property name="geometry">
       <rect>
        <x>60</x>
        <y>150</y>
        <width>93</width>
        <height>28</height>
       </rect>
      </property>
      <property name="styleSheet">
       <string notr="true">/* Apply styles to QPushButton */
QPushButton {
    background-color: #3498db; /* Background color */
    color: white; /* Text color */
    border: 1px solid #2980b9; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px 10px; /* Padding (vertical horizontal) */
}

/* Hover effect */
QPushButton:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Pressed effect */
QPushButton:pressed {
    /*background-color: #1f618d;  Background color when pressed */
 background-color:rgb(153, 0, 0) ; /* Background color when pressed */
}
</string>
      </property>
      <property name="text">
       <string>SMS</string>
      </property>
     </widget>
    </widget>
   </widget>
   <widget class="QWidget" name="widget">
    <attribute name="title">
     <string>Afficher stock</string>
    </attribute>
    <widget class="QComboBox" name="comboBox">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>140</y>
       <width>171</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QComboBox */
QComboBox {
    background-color: #3498db; /* Background color */
    color: white; /* Text color */
    border: 1px solid #2980b9; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px 10px; /* Padding (vertical horizontal) */
    min-width: 100px; /* Minimum width */
    selection-background-color: #2980b9; /* Background color when an item is selected */
}

/* Dropdown arrow icon */
QComboBox::down-arrow {
    image: url(down_arrow.png); /* Replace 'down_arrow.png' with your arrow icon image */
    width: 16px;
    height: 16px;
}

/* Hover effect */
QComboBox:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Pressed effect */
QComboBox:pressed {
    background-color: rgb(153, 0, 0); /* Background color when pressed */
}

/* Popup menu style */
QComboBox QAbstractItemView {
    background-color: #ecf0f1; /* Background color of the dropdown menu */
    border: 1px solid #bdc3c7; /* Border color of the dropdown menu */
    selection-background-color: #3498db; /* Background color when an item is selected */
}
</string>
     </property>
     <item>
      <property name="text">
       <string>Nom</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>PRIX_UNITAIRE</string>
      </property>
     </item>
     <item>
      <property name="text">
       <string>QUANTITY</string>
      </property>
     </item>
    </widget>
    <widget class="QLabel" name="label_6">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>120</y>
       <width>47</width>
       <height>14</height>
      </rect>
     </property>
     <property name="text">
      <string>Tri</string>
     </property>
    </widget>
    <widget class="QPushButton" name="pdf">
     <property name="geometry">
      <rect>
       <x>610</x>
       <y>70</y>
       <width>121</width>
       <height>41</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QPushButton */
QPushButton {
    background-color: #3498db; /* Background color */
    color: white; /* Text color */
    border: 1px solid #2980b9; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px 10px; /* Padding (vertical horizontal) */
}

/* Hover effect */
QPushButton:hover {
    background-color: rgb(255, 38, 38); /* Background color on hover */
}

/* Pressed effect */
QPushButton:pressed {
    /*background-color: #1f618d;  Background color when pressed */
 background-color:rgb(153, 0, 0) ; /* Background color when pressed */
}
</string>
     </property>
     <property name="text">
      <string>Imprimer Pdf</string>
     </property>
    </widget>
    <widget class="QLineEdit" name="recherche">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>80</y>
       <width>171</width>
       <height>31</height>
      </rect>
     </property>
     <property name="styleSheet">
      <string notr="true">/* Apply styles to QLineEdit */
QLineEdit {
    background-color: #ecf0f1; /* Background color */
    border: 1px solid #bdc3c7; /* Border color */
    border-radius: 5px; /* Rounded corners */
    padding: 5px; /* Padding */
}

/* Text selection color */
QLineEdit:selected {
    background-color: #3498db; /* Selected text background color */
    color: white; /* Selected text color */
}
</string>
     </property>
    </widget>
    <widget class="QLabel" name="label_7">
     <property name="geometry">
      <rect>
       <x>10</x>
       <y>60</y>
       <width>91</width>
       <height>16</height>
      </rect>
     </property>
     <property name="text">
      <string>Chercher</string>
     </property>
    </widget>
    <widget class="QTableView" name="tableView">
     <property name="geometry">
      <rect>
       <x>210</x>
       <y>40</y>
       <width>371</width>
       <height>241</height>
      </rect>
     </property>
    </widget>
   </widget>
  </widget>
 </widget>
 <resources/>
 <connections/>
</ui>
